---
title: Contact
hasCTA: false
---

{% extends "boilerplate/base.njk" %}

{% block links %}{% endblock %}

{% block head %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
{% endblock %}



{% block content %}
<section class="section">
    <div class="layout -l-2Col-SpreadHalfImage-1 -lf-bgColor-2">
        <div class="container -lu-padding-even5 -spread-spacing5">
            <h2 class="-t-uppercase">Letâ€™s Talk About <br>Your Project</h2>
            <form id="contactForm" class="-form-1" netlify name="contact" enctype="multipart/form-data">
                <div class="inputContainer -inputContainer-1">
                    <label class="-t-pSmall" for="name">Name</label>
                    <input type="text" name="name" id="name" required>
                </div>
                <div class="-formGroup-hor">
                    <div class="inputContainer -inputContainer-1">
                        <label class="-t-pSmall" for="email">Email</label>
                        <input type="email" name="email" id="email" required>
                    </div>
                    <div class="inputContainer -inputContainer-1">
                        <label class="-t-pSmall" for="phone">Phone Number</label>
                        <input type="tel" name="phone" id="phone" required>
                    </div>
                </div>
                <div class="inputContainer -inputContainer-1">
                    <label class="-t-pSmall" for="message">Tell Us About Your Project</label>
                    <textarea name="message" id="message" required></textarea>
                </div>

                <div class="inputContainer -inputContainer-fileUpload-1">
                    <label class="-t-pSmall" for="files">Upload Related Project Photos / Files</label>
                    <input type="file" id="files" name="files">
                </div>

                <input class="-b-2" type="submit" value="Send Message">
            </form>
        </div>
        <div class="imgWrapper"><img src="/assets/img7.jpg" alt=""></div>
    </div>
  <script>
    async function resizeImage(file, maxSize = 1024) {
      return new Promise((resolve) => {
        const img = new Image();
        const reader = new FileReader();

        reader.onload = (event) => {
          img.src = event.target.result;
        };

        img.onload = () => {
          const canvas = document.createElement('canvas');
          const ctx = canvas.getContext('2d');

          let { width, height } = img;
          if (width > height) {
            if (width > maxSize) {
              height = Math.round((height *= maxSize / width));
              width = maxSize;
            }
          } else {
            if (height > maxSize) {
              width = Math.round((width *= maxSize / height));
              height = maxSize;
            }
          }

          canvas.width = width;
          canvas.height = height;
          ctx.drawImage(img, 0, 0, width, height);
          canvas.toBlob((blob) => {
            resolve(blob);
          }, file.type, 0.7); // Adjust compression quality here
        };

        reader.readAsDataURL(file);
      });
    }

    async function handleFileInputChange(event) {
      const input = event.target;
      const files = Array.from(input.files);

      if (files.length === 0) return;

      const zip = new JSZip();

      // Resize and add files to the zip
      for (const file of files) {
        if (file.type.startsWith('image/')) {
          const resizedImage = await resizeImage(file);
          zip.file(file.name, resizedImage);
        } else {
          zip.file(file.name, file);
        }
      }

      // Generate the zip file
      const zipBlob = await zip.generateAsync({ type: 'blob' });

      // Check the zip file size limit (0.1 MB or 100 KB)
      const maxZipSize = 0.1 * 1024 * 1024; // 0.1 MB in bytes
      if (zipBlob.size > maxZipSize) {
        alert(`The total file size exceeds the limit of 0.1 MB. Please reduce the size of your files.`);
        input.value = ''; // Reset the file input
        return;
      }

      // Revert the input to accept a single file and attach the zip
      input.removeAttribute('multiple');
      const zipFile = new File([zipBlob], 'compressed_files.zip', { type: 'application/zip' });

      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(zipFile);
      input.files = dataTransfer.files;

      alert('Files have been compressed, zipped, and are ready to send!');
    }

    document.addEventListener('DOMContentLoaded', () => {
      const fileInput = document.getElementById('files');

      // Add the multiple attribute when the page loads
      fileInput.setAttribute('multiple', '');

      // Add event listener to process files when user selects them
      fileInput.addEventListener('change', handleFileInputChange);
    });
  </script>
</section>
<iframe class="-l-map" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2804.638348606818!2d-75.7090560881319!3d45.335924941867695!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x27861106a3e52e83%3A0x850baa8a79314d8c!2sVerawood%20Construction!5e0!3m2!1sen!2sca!4v1734494696389!5m2!1sen!2sca" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
{% endblock %}